module compare8Bit (
    input z,
    input v,
    input n,
    input alufn[6], // 2 sets of ALUFN1 and ALUFN2 for three cases
    output cmp[8]
    
  ) {
  sig lsb;

  always {
    case(alufn[2:1]) {
      2b01:
      lsb = z; // A=B
      2b10:
      lsb = n^v; //A<B
      2b11:
      lsb = z|(n^v); // A<=B
      default:
      lsb = b0;      
  }
    cmp[0] = lsb; // The Least Significant Bit is determined by the comparison
    cmp[7:1] = 7b0; // The rest of the bits are 0 
}
}
