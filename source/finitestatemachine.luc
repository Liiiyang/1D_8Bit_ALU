module finitestatemachine (
    input clk,  // clock
    input rst,  // reset
    input io_button,
    output io_value[4][4],
    output display[8]

    
  ) {

  .clk(clk) {  
    adder8BitTest add_results;
    boolean8BitTest boole_results;
    shift8BitTest shift_results;
    compare8BitTest compare_results;
    .rst(rst) {
    
    fsm state(#INIT(IDLE)) = {IDLE,ADD,BOOLE,SHIFT,COMPARE,DONE};
 
         
    }
    
}
     /*
     The state machine will go through a test module and if it passes, it will go on the 
     next state and go through the next test module.A display is added to ensure that the 
     ALU successfully go through all the test cases.
      
    */
  
  always {
    add_results.rst = 0;
    boole_results.rst = 0;
    shift_results.rst = 0;
    compare_results.rst = 0;  
    display = 8h00;
    
    io_value = {4d0,4d0,4d0,4d0}; 
        
    state.d = state.q;
    
    case (state.q) {
      state.IDLE:
        io_value = {4d9,4d13,4d2,4d14};
        // Pressing the Center Button will start the state machine and begin testing
        if (io_button == 1) {    
          state.d = state.ADD;
          add_results.rst = 1;
        }
        
      state.ADD:  
        io_value = {4d10,4d13,4d13,4d0}; // Shows ADD
        display = add_results.display; 
        if (add_results.error == 1) {
          state.d = state.IDLE;
        }
        else if(add_results.done == 1 && add_results.error == 0){
          boole_results.rst= 1;  
          state.d = state.BOOLE;
        }
                    
      state.BOOLE:
        io_value = {4d11,4d4,4d4,4d2}; // Shows BOOL 
        display = boole_results.display;
        if(boole_results.error == 1) {
          state.d = state.IDLE;
        }
        else if(boole_results.done == 1 && boole_results.error == 0) {
          shift_results.rst = 1;    
          state.d = state.SHIFT;
        }

      state.SHIFT:
        io_value = {4d7,4d1,4d15,4d0}; // Shows SHF 
        display = shift_results.display;
        if(shift_results.error == 1){
          state.d = state.IDLE;
        }
        else if(shift_results.done == 1 && shift_results.error == 0) {
          compare_results.rst = 1;        
          state.d = state.COMPARE;
        }
        
      state.COMPARE:
        io_value= {4d12,4d5,4d0,4d0}; // Shows CP
        display = compare_results.display;
        if(compare_results.error == 1) { 
          state.d = state.IDLE;
        }
        else if (compare_results.done == 1 && compare_results.error == 0) {
          state.d = state.DONE;
        }
      state.DONE:
        io_value = {4d13,4d4,4d3,4d14}; // Shows Done to signify the test is copleted
        if (io_button == 1) {
          state.d = state.IDLE;
        }
       
  }
}
}